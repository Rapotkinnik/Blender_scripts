<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1070</x>
      <y>40</y>
      <w>170</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Object
--
-indices: uint[]
-data: Vertex[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>50</x>
      <y>270</y>
      <w>560</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Curve
--
#order:  uint
#knots:  int[]
#points: Point3D[]
--
+set_order(order: uint)
+use_control_points(use: bool)

/+get_model_matrix(): Matrix4x4/

/+get_point(t: float): Point3D/

Алгоритм построения линии на основе простых сечений
/+get_line(t_start: float, t_end: float,/
/          segment_count: uint): Point3D[]/
          
Алгоритм построения на основе расчета угла между отрезками
/+get_line(t_start:   float, t_end: float,/
/          min_angle: float): Point3D[]/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>30</y>
      <w>210</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Vertex
--
+coord:  Point3D
+color:  ColorRGB
+normal: Point3D
+textureCoord: PointUV</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>50</x>
      <y>30</y>
      <w>120</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Point2D
--
+x: float
+y: float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>30</y>
      <w>120</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Point3D
--
+x: float
+y: float
+z: float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>30</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ColorRGB
--
+r: float
+g: float
+b: float
+alpha: float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>30</y>
      <w>120</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>PointUV
--
+u: float
+v: float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>710</x>
      <y>270</y>
      <w>660</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Surface
--
#order_u: uint
#order_v: uint
#points: Point3D[]
--
+set_order(order: uint)
+use_control_points(use: bool)

/+get_model_matrix(): Matrix4x4/

/+get_point(u: float, v: float): Point3D/
/+get_point(uv_point: float[2]): Point3D //Сюда можно передать и PointUV/

Алгоритм построения линии на основе простых сечений
/+get_surface(uv_points: PointUV[], segment_count: uint): /
          
Алгоритм построения на основе расчета угла между отрезками
/+get_surface(uv_points: PointUV[], min_angle: float): /</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>750</x>
      <y>600</y>
      <w>220</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>BookPage
--
-smth: Curve[]
-flp_over: Curve[]
--
+do_smth(t: float)
+do_flip_over(t: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>540</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1050</x>
      <y>640</y>
      <w>270</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>BookCover
--
-smth: Curve[]
-smth_else: Curve[]
--
+do_open(t: float)
+do_smth_else(t: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>540</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>600</y>
      <w>170</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>SomeCurve
--
-smth: Curve[]
--
+do_smth(t: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>600</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>SomeAnotherCurve
--
-smth_else: Curve[]
--
+do_smth_else(t: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>540</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>540</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>140</x>
      <y>720</y>
      <w>380</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Алгоритм построения ломанной
по кривой по умолчанию у всех одинковый
Каждый новый класс иницилизирует
внутри список контрольных точек и knots
Может содеожать анимацию - список кривых,
описывающих изменение положения точек
Количество кривых равно количество точек

Вызовы методов анимации изменяют
внетрениие данные?</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>190</x>
      <y>660</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>660</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>90</x>
      <y>160</y>
      <w>470</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>get_model_matrix() - виртуальный метод потому,
что анимация может просто менять модельную матрицу?
По умолчанию (если мы не экспортируем модельную матрицу)
этот методов возвращает единичную матрицу</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>220</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>390</y>
      <w>170</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;270.0;150.0;270.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>390</y>
      <w>470</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;340.0;450.0;340.0</additional_attributes>
  </element>
</diagram>
